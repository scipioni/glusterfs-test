#!/usr/bin/env bash

dir=$(pwd)

function :build {
  COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build
}

function :start {
  docker-compose up --remove-orphans
}

function :cli {
  docker-compose run --rm -it $1 bash
}

function :exec {
  docker-compose exec $1 $2
}

function :destroy {
  docker-compose down
  sudo rm -fR ./volumes
}

function :init {
  :destroy
  docker-compose up --remove-orphans -d

  # probe peer hosts
  for host in wm2 wa3 wm3; do
    docker-compose exec wa2 gluster peer probe $host
  done

  # create, order is important, see https://docs.gluster.org/en/main/Administrator-Guide/Setting-Up-Volumes/#arbiter-configuration-for-replica-volumes
  docker-compose exec wa2 gluster volume create gv0 replica 2 wa2:/data/brick1 wm2:/data/brick1 force
  docker-compose exec wa2 gluster volume start gv0

  # agsm usa agsm wa2
  docker-compose exec wa2 mount -t glusterfs wa2:/gv0 /mnt >/dev/null 2>/dev/null
  docker-compose exec wa3 mount -t glusterfs wa2:/gv0 /mnt >/dev/null 2>/dev/null

  :meucci:mount

  :test A
}

function :meucci:mount {
  # meucci usa meucci wm2
  docker-compose exec wm2 mount -t glusterfs wm2:/gv0 /mnt >/dev/null 2>/dev/null
  docker-compose exec wm3 mount -t glusterfs wm2:/gv0 /mnt >/dev/null 2>/dev/null

}

function :expand {
  # aggiungiamo dei nuovi brick (ovvero volumi openstack)
  docker-compose exec wa2 gluster volume add-brick gv0 replica 2 wa2:/data/brick2 wm2:/data/brick2
  docker-compose exec wa2 gluster volume rebalance gv0 start
}

function :meucci:kill {
  docker-compose kill wm2
  docker-compose kill wm3
}

function :meucci:start {
  docker-compose up -d
  :meucci:mount
}

function :test {
  test=$1

  echo
  for host in wa2 wm2 wa3 wm3; do
    docker-compose exec $host truncate -s 10m  /mnt/example-$test-$host.file
  done

  # check
  echo
  tree -h volumes
}

function :status {
  docker-compose exec wa2 gluster vol status
  docker-compose exec wa2 gluster peer status
}

function :help {
  echo "$0 <task> <args>"
  echo "Tasks:"

  # We pick out the `:*` functions
  compgen -A function | sed -En 's/(.*):(.*)/\1:\2/p' | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time ":${@:-help}"
